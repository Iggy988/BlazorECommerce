@page "/product/{id:int}"
@inject IProductService ProductService

@if (_product == null)
{
    @* <span>Loading Product...</span> *@
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@_product.ImgUrl" alt="@_product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_product.Title</h2>
            <p>@_product.Description</p>
            <h4 class="price">$@_product.Price</h4>
        </div>
    </div>
}

@code {
    private Product? _product = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        //_product =  ProductService.Products.Find(p => p.Id == Id);
        message = "Loading product...";

        var result =await  ProductService.GetProduct(Id);

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            _product = result.Data;
        }

    }
}
